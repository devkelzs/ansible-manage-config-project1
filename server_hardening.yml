---
- name: Basic server hardening for Debian and CentOS
  hosts: servers
  become: yes

  tasks:
    # === UPDATE PACKAGES ===
    - name: Update all packages (Debian)
      apt:
        name: "*"
        state: latest
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Update all packages (RedHat/CentOS/Amazon)
      dnf:
        name: "*"
        state: latest
      when: ansible_os_family == "RedHat"

    # === SSH HARDENING ===
    - name: Ensure /run/sshd exists (RedHat family only)
      file:
        path: /run/sshd
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: ansible_os_family == "RedHat"

    - name: Disable root login in SSH
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
        validate: 'sshd -t -f %s'
      notify: Restart SSH

    # === UFW FOR DEBIAN ===
    - name: Install UFW
      apt:
        name: ufw
        state: present
      when: ansible_os_family == "Debian"

    - name: Reset UFW
      command: ufw --force reset
      when: ansible_os_family == "Debian"

    - name: Allow SSH in UFW
      ufw:
        rule: allow
        port: 22
        proto: tcp
      when: ansible_os_family == "Debian"

    - name: Enable UFW
      ufw:
        state: enabled
      when: ansible_os_family == "Debian"

    # === FIREWALLD FOR REDHAT ===
    - name: Install firewalld (RedHat)
      dnf:
        name: firewalld
        state: present
      when: ansible_os_family == "RedHat"

    - name: Check if firewalld is installed (RedHat)
      shell: rpm -q firewalld
      register: firewalld_check
      changed_when: false
      failed_when: false
      when: ansible_os_family == "RedHat"

    - name: Reload systemd daemon (RedHat)
      command: systemctl daemon-reload
      when:
        - ansible_os_family == "RedHat"
        - firewalld_check.stdout is search("firewalld")

    - name: Start and enable firewalld (RedHat)
      service:
        name: firewalld
        state: started
        enabled: yes
      when:
        - ansible_os_family == "RedHat"
        - firewalld_check.stdout is search("firewalld")

    - name: Allow SSH in firewalld (RedHat)
      firewalld:
        service: ssh
        permanent: yes
        state: enabled
        immediate: yes
      when:
        - ansible_os_family == "RedHat"
        - firewalld_check.stdout is search("firewalld")

  handlers:
    - name: Restart SSH
      service:
        name: "{{ 'sshd' if ansible_os_family == 'RedHat' else 'ssh' }}"
        state: restarted
